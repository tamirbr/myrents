package net.myrents.web.controller;

import net.myrents.model.*;
import net.myrents.service.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.List;

@RestController
@RequestMapping(path = "/search/")
public class SearchRestController {
    @Autowired
    private CategoryService categoryService;

    @Autowired
    private SubCategoryService subCategoryService;

    @Autowired
    private ItemService itemService;

    // get group type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "groupType", method = RequestMethod.GET)
    public List<String> groupType() {
        List<String> stringList = categoryService.findAllGroupTypes();
        return stringList;
    }

    // get group type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "category/{catId}/{subCatId}", method = RequestMethod.GET)
    public List<String> categoryInfo(@PathVariable Long catId, @PathVariable Long subCatId) {
        List<String> stringList = new ArrayList<>();
        if(catId != 0 && catId != null){
            stringList.add(categoryService.findById(catId).getName());
        } else{
            stringList.add("ללא קטגוריה");
        }
        if(subCatId != 0 && subCatId != null){
            stringList.add(subCategoryService.findById(subCatId).getName());
        } else{
            stringList.add("ללא תת קטגוריה");
        }
        return stringList;
    }

    // category's by type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "cat/{type}", method = RequestMethod.GET)
    public List<Category> categoryType(@PathVariable String type) {
        List<Category> categories = categoryService.findAll(type);
        return categories;
    }

    // sub category's by type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "subCat/{id}", method = RequestMethod.GET)
    public List<SubCategory> subCategoryType(@PathVariable Long id) {
        List<SubCategory> subCategories = subCategoryService.findAll(id);
        return subCategories;
    }

    // get new items by type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "newItems/{type}", method = RequestMethod.GET)
    public List<NewItem> newItems(@PathVariable String type) {
        List<Item> tempList = itemService.findAll(type+"");
        List<NewItem> newItems = new ArrayList<>();
        for(int i = 0; i< tempList.size();i++){
            newItems.add(new NewItem(tempList.get(i)));
        }
        return newItems;
    }

    // get new items by type
    @ResponseStatus(value = HttpStatus.OK)
    @ResponseBody
    @RequestMapping(value = "newItemsTitle/{type}", method = RequestMethod.GET)
    public String newItemsTitle(@PathVariable String type) {
        switch (type){
            case ConstantsHe.PRODUCTS_VALUE:
                return ConstantsHe.NEW_RENTS;
            case ConstantsHe.REAL_ESTATE_VALUE:
                return ConstantsHe.NEW_REAL_ESTATE_RENTS;
            case ConstantsHe.CARS_VALUE:
                return ConstantsHe.NEW_CAR_RENTS;
            case ConstantsHe.BIKES_VALUE:
                return ConstantsHe.NEW_BIKE_RENTS;
            case ConstantsHe.JEEPS_VALUE:
                return ConstantsHe.NEW_JEEP_RENTS;
            case ConstantsHe.SCOOTERS_VALUE:
                return ConstantsHe.NEW_SCOOTER_RENTS;
            case ConstantsHe.TRUCKS_VALUE:
                return ConstantsHe.NEW_TRUCK_RENTS;
            default:
                return ConstantsHe.NEW_RENTS;
        }
    }
}












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































